@{
    ViewBag.Title = "Squat Tracker";
    Layout = null; // Remove if you're using a shared layout
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Squat Tracker</title>
    <style>
        /* Define your color variables */
        :root {
            --primary-color: #2a9d8f; /* Example Primary Color */
            --accent-color: #e9c46a; /* Example Accent Color */
            --tertiary-color: #264653; /* Example Tertiary Color */
            --background-color: #f5f5f5;
            --box-shadow-color: rgba(0, 0, 0, 0.2);
        }

        body {
            font-family: Arial, sans-serif;
            background: var(--background-color);
            color: var(--tertiary-color);
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: auto;
            padding: 20px;
        }

        .status {
            font-size: 24px;
            margin-top: 30px;
            background-color: #fff;
            display: inline-block;
            padding: 20px 30px;
            border-radius: 15px;
            box-shadow: 0 0 10px var(--box-shadow-color);
            width: 100%;
            text-align: left;
            font-weight: bold;
            color: var(--tertiary-color);
        }

        .frame-container {
            margin-top: 40px;
            max-height: 500px;
            overflow: hidden;
            text-align: center;
        }

        img {
            max-width: 100%;
            height: auto;
            border: 2px solid #333;
            border-radius: 8px;
        }

        .back-btn {
            margin-top: 30px;
            padding: 10px 20px;
            background-color: var(--accent-color);
            color: var(--primary-color);
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .back-btn:hover {
                background-color: darken(var(--accent-color), 10%);
            }

        h2 {
            text-align: center;
            font-size: 28px;
            font-weight: bold;
            color: var(--primary-color);
        }

        hr {
            border-top: 2px solid var(--accent-color);
        }

        .back-btn-container {
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2>Squat Tracker Live Feed</h2>
        <hr />

        <!-- Status Box -->
        <div class="status" id="statusText">Loading...</div>

        <!-- Live Frame -->
        <div class="frame-container">
            <img id="liveFrame" src="" alt="Live frame not loaded" />
        </div>

        <!-- Back to Home Button -->
        <div class="back-btn-container">
            <button class="back-btn" onclick="window.location.href='/Home/Index'">Back to Home</button>
        </div>
    </div>

    <script>
        window.onload = () => {
            startFlask();
            setInterval(fetchStatus, 50);
        };

        async function startFlask() {
            try {
                await fetch("/Exercise/Squat", { method: "POST" });
            } catch (err) {
                console.error("Failed to start Flask backend:", err);
            }
        }

        async function fetchStatus() {
            try {
                const response = await fetch("http://127.0.0.1:5000/status");
                const data = await response.json();

                console.log("Received:", data); // helpful for debugging

                if (data.frame) {
                    document.getElementById("liveFrame").src = "data:image/jpeg;base64," + data.frame;
                }

                document.getElementById("statusText").innerText =
                    `Reps: ${data.counter}, Stage: ${data.stage ?? "N/A"}, Error: ${data.error ?? "None"}`;
            } catch (err) {
                console.error("Error fetching status:", err);
            }
        }
    </script>
</body>
</html>
