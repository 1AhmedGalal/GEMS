@{
    ViewBag.Title = "Bicep Curl Tracker";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Bicep Curl Tracker</title>
    <style>
        :root {
            --primary-color: #1e113a;
            --secondary-color: #52f3ea;
            --tertiary-color: #fffef7;
        }

        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background: var(--primary-color);
            color: var(--tertiary-color);
            padding: 20px;
            margin: 0;
        }

        h2 {
            margin-top: 20px;
            color: var(--secondary-color);
        }

        .status {
            font-size: 24px;
            margin-top: 30px;
            background-color: var(--tertiary-color);
            color: var(--primary-color);
            display: inline-block;
            padding: 20px 30px;
            border-radius: 15px;
            box-shadow: 0 0 15px rgba(82, 243, 234, 0.4);
            width: 70%;
            text-align: left;
            font-weight: bold;
            white-space: pre-line;
        }

        .frame-container {
            margin-top: 40px;
            max-height: 800px;
            overflow: hidden;
        }

        img {
            max-width: 80%;
            height: auto;
            border: 3px solid var(--secondary-color);
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(82, 243, 234, 0.6);
        }

        .back-btn, .stop-btn {
            margin-top: 30px;
            padding: 12px 24px;
            background-color: var(--secondary-color);
            color: var(--primary-color);
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .stop-btn {
            background-color: #f44336;
            color: white;
        }

            .stop-btn:hover {
                background-color: #e53935;
            }

        .back-btn:hover {
            background-color: #3fd3c8;
        }
    </style>
</head>
<body>
    <h2>Bicep Curl Tracker Live Feed</h2>

    <!-- Status Box -->
    <div class="status" id="statusText">Loading...</div>

    <!-- Live Frame -->
    <div class="frame-container">
        <img id="liveFrame" src="" alt="Live frame not loaded" />
    </div>

    <!-- Back to Home Button -->
    <button class="back-btn" onclick="handleBackToHome()">Back to Home</button>

    <script>
        let bicepLeft = 0;
        let bicepRight = 0;
        let badLeft = 0;
        let badRight = 0;
        let badLeftCounter = 0;
        let badRightCounter = 0;
        let wasBadLeft = false;
        let wasBadRight = false;
        const exerciseId = 6;

        window.onload = () => {
            startFlask();
            setInterval(fetchStatus, 100);
        };

        async function startFlask() {
            try {
                await fetch("/Exercise/Bicep", { method: "POST" });
            } catch (err) {
                console.error("Failed to start Flask backend:", err);
            }
        }

        async function fetchStatus() {
            try {
                const response = await fetch("http://127.0.0.1:5000/status");
                const data = await response.json();

                if (data.frame) {
                    document.getElementById("liveFrame").src = "data:image/jpeg;base64," + data.frame;
                }

                bicepLeft = data.bicep_left_count ?? 0;
                bicepRight = data.bicep_right_count ?? 0;
                badLeft = data.bicep_bad_left_form ?? 0;
                badRight = data.bicep_bad_right_form ?? 0;

                // Update bad counters
                if (badLeft && !wasBadLeft) {
                    badLeftCounter++;
                    wasBadLeft = true;
                } else if (!badLeft) {
                    wasBadLeft = false;
                }

                if (badRight && !wasBadRight) {
                    badRightCounter++;
                    wasBadRight = true;
                } else if (!badRight) {
                    wasBadRight = false;
                }

                // Change theme color based on bad form
                const root = document.documentElement;
                if (badLeft || badRight) {
                    root.style.setProperty('--secondary-color', '#000000'); // dark red
                    root.style.setProperty('--tertiary-color', '#ffffff');  // white
                    document.body.style.backgroundColor = '#8B0000';        // black
                } else {
                    root.style.setProperty('--secondary-color', '#52f3ea'); // original
                    root.style.setProperty('--tertiary-color', '#fffef7');
                    document.body.style.backgroundColor = '#1e113a';
                }

                const leftFeedback = badLeft ? "Bad left Arm Form! Please keep your hands to your side" : "";
                const rightFeedback = badRight ? "Bad right Arm Form! Please keep your hands to your side" : "";

                document.getElementById("statusText").innerText =
                    `Left Arm Reps: ${bicepLeft}\n` +
                    `Right Arm Reps: ${bicepRight}\n` +
                    `Left Arm Feedback: ${leftFeedback}\n` +
                    `Right Arm Feedback: ${rightFeedback}`;
            } catch (err) {
                console.error("Error fetching status:", err);
            }
        }

        async function saveExerciseData() {
            try {
                const response = await fetch("/Exercise/SaveExerciseData", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        exerciseId: exerciseId,
                        totalRepsPlayed: bicepLeft + bicepRight,
                        totalMistakesMade: badLeftCounter + badRightCounter
                    })
                });

                const result = await response.json();
                console.log("Save result:", result);
            } catch (err) {
                console.error("Failed to save exercise data:", err);
            }
        }

        async function handleBackToHome() {
            await stopBicep();
            await saveExerciseData();
            window.location.href = '/Home/Index';
        }

        async function stopBicep() {
            try {
                const response = await fetch("http://127.0.0.1:5000/start", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ trigger: "stop" })
                });

                const data = await response.json();
                console.log(data);
            } catch (err) {
                console.error("Error stopping bicep tracking:", err);
            }
        }
    </script>
</body>
</html>
